syntax = "proto3";

package qdrant;
option java_multiple_files = true;
option java_package = "qdrant.client.grpc.service.internal";

service QdrantInternal {
  /*
  Get current commit and term on the target node.
   */
  rpc GetConsensusCommit (GetConsensusCommitRequest) returns (GetConsensusCommitResponse) {}

  /*
  Wait until the target node reached the given commit ID.
  */
  rpc WaitOnConsensusCommit (WaitOnConsensusCommitRequest) returns (WaitOnConsensusCommitResponse) {}
}

message GetConsensusCommitRequest {}

message GetConsensusCommitResponse {
  int64 commit = 1; // Raft commit as u64
  int64 term = 2; // Raft term as u64
}

message WaitOnConsensusCommitRequest {
  int64 commit = 1; // Raft commit as u64
  int64 term = 2; // Raft term as u64
  int64 timeout = 3; // Timeout in seconds
}

message WaitOnConsensusCommitResponse {
  bool ok = 1; // False if commit/term is diverged and never reached or if timed out.
}
